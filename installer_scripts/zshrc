##VARIABLES

OCTOCONF_PATH="$HOME/Downloads/octoconf"

##ALIASES
alias reload="source ~/.zshrc"
alias ginette="nvim ~/.zshrc"

##FUNCTIONS
function zshrc_update()
{
	echo "[+] Backing up zshrc"
	cp $HOME/.zshrc $OCTOCONF_PATH/installer_scripts/zshrc
	pwd=$(pwd)
	cd $OCTOCONF_PATH
	git add *
	git commit -m "updated zshrc"
	git push
}


function pull_apks() {
    local package_name="$1"
    
    # Check if package name is provided
    if [ -z "$package_name" ]; then
        echo "Usage: pull_apks <package_name>"
        echo "Example: pull_apks com.grammarly.android.keyboard"
        return 1
    fi
    
    # Check if adb is available
    if ! command -v adb &> /dev/null; then
        echo "Error: adb command not found. Make sure Android SDK is installed and in PATH."
        return 1
    fi
    
    # Check if device is connected
    if ! adb devices | grep -q "device$"; then
        echo "Error: No Android device connected or device not authorized."
        return 1
    fi
    
    echo "Getting APK paths for package: $package_name"
    
    # Get all APK paths for the package
    local apk_paths=$(adb shell pm path "$package_name" 2>/dev/null)
    
    # Check if package exists
    if [ -z "$apk_paths" ]; then
        echo "Error: Package '$package_name' not found on device."
        return 1
    fi
    
    # Create directory for the package
    local output_dir="origin"
    mkdir -p "$output_dir"
    
    echo "Created directory: $output_dir"
    echo "Found APK files:"
    
    # Process each APK path
    while IFS= read -r line; do
        if [[ $line == package:* ]]; then
            # Remove "package:" prefix
            local apk_path="${line#package:}"
            
            # Extract filename from path
            local apk_filename=$(basename "$apk_path")
            
            echo "  - $apk_filename"
            
            # Pull the APK file
            if adb pull "$apk_path" "$output_dir/$apk_filename" > /dev/null 2>&1; then
                echo "    ✓ Pulled successfully"
            else
                echo "    ✗ Failed to pull"
            fi
        fi
    done <<< "$apk_paths"
    
    echo ""
    echo "All APK files saved to: $output_dir"
    echo "Files in directory:"
    ls -la "$output_dir"
}





plugins=(git
zsh-syntax-highlighting
zsh-autosuggestions
zsh-completions
)


# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# Path to your Oh My Zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time Oh My Zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='nvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch $(uname -m)"

# Set personal aliases, overriding those provided by Oh My Zsh libs,
# plugins, and themes. Aliases can be placed here, though Oh My Zsh
# users are encouraged to define aliases within a top-level file in
# the $ZSH_CUSTOM folder, with .zsh extension. Examples:
# - $ZSH_CUSTOM/aliases.zsh
# - $ZSH_CUSTOM/macos.zsh
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"


# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh


